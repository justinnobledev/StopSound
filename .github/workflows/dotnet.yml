# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore

    # Get version from .cs file
    - name: Get Version
      run: |
        version=$(grep 'public override string ModuleVersion =>' /home/runner/work/StopSound/StopSound/StopSound.cs | sed 's/.*=> "\(.*\)";/\1/')
        short_sha=$(echo $GITHUB_SHA | cut -c1-7)
        tag=$(echo $version | tr '[:upper:]' '[:lower:]')
        echo "VERSION=$version" >> $GITHUB_ENV
        echo "SHORT_SHA=$short_sha" >> $GITHUB_ENV
        echo "TAG=$tag" >> $GITHUB_ENV
    
    # gather all file in for release
    - name: Prepare Directory
      run: | 
        # make main folder
        mkdir -p release/addons/counterstrikesharp/plugins/StopSound

        # Copy all plugins files
        # cp /home/runner/work/StopSound/StopSound/bin/Debug/net8.0/StopSound.deps release/addons/counterstrikesharp/plugins/StopSound/
        cp /home/runner/work/StopSound/StopSound/bin/Debug/net8.0/StopSound.dll release/addons/counterstrikesharp/plugins/StopSound/
        cp /home/runner/work/StopSound/StopSound/bin/Debug/net8.0/StopSound.pdb release/addons/counterstrikesharp/plugins/StopSound/

        # Copy all SQLite files
        cp /home/runner/work/StopSound/StopSound/bin/Debug/net8.0/SQLitePCLRaw.provider.e_sqlite3.dll release/addons/counterstrikesharp/plugins/StopSound/
        cp /home/runner/work/StopSound/StopSound/bin/Debug/net8.0/SQLitePCLRaw.batteries_v2.dll release/addons/counterstrikesharp/plugins/StopSound/
        cp /home/runner/work/StopSound/StopSound/bin/Debug/net8.0/SQLitePCLRaw.core.dll release/addons/counterstrikesharp/plugins/StopSound/
        cp /home/runner/work/StopSound/StopSound/bin/Debug/net8.0/Dapper.dll release/addons/counterstrikesharp/plugins/StopSound/
        cp /home/runner/work/StopSound/StopSound/bin/Debug/net8.0/Microsoft.Data.Sqlite.dll release/addons/counterstrikesharp/plugins/StopSound/
        cp /home/runner/work/StopSound/StopSound/bin/Debug/net8.0/StopSound.dll release/addons/counterstrikesharp/plugins/StopSound/

        # make SQLite dependencies folder.
        mkdir -p release/addons/counterstrikesharp/dotnet/shared/Microsoft.NETCore.App/8.0.3

        # copy sqlite dependencies files.
        cp /home/runner/work/StopSound/StopSound/bin/Debug/net8.0/runtimes/linux-x64/native/libe_sqlite3.so release/addons/counterstrikesharp/dotnet/shared/Microsoft.NETCore.App/8.0.3/
        cp /home/runner/work/StopSound/StopSound/bin/Debug/net8.0/runtimes/win-x64/native/e_sqlite3.dll release/addons/counterstrikesharp/dotnet/shared/Microsoft.NETCore.App/8.0.3/
    
    # zip file
    - name: Zip File
      run: |
        cd release
        zip -r StopSound.zip addons
    
    # artifact for user to getting a file.
    - uses: actions/upload-artifact@v4
      with:
        name: StopSound-${{ env.SHORT_SHA }}
        path: release/

    - name: Create GitHub Release

      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG }}
        release_name: ${{ env.VERSION }}
        draft: false
        prerelease: false

    - name: Upload Release Asset

      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release/StopSound.zip
        asset_name: StopSound_${{ env.TAG }}.zip
        asset_content_type: application/zip

  